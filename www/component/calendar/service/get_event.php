<?php class service_get_event extends Service {		public function get_required_rights() {		return array();	}		public function documentation() { echo "Return event details of the given event id"; } 	public function input_documentation() {		echo "<ul>";			echo "<li><code>id</code>: the id of the event</li>";			echo "<li><code>calendar_id</code>: the id of the calendar</li>";		echo "</ul>"; 	}	public function output_documentation() { echo "Returns a CalendarEvent object"; }			public function execute(&$component, $input) {		$calendar_id = $input["calendar_id"];		$id = $input["id"];		if (!$component->canReadCalendar($calendar_id)) {			PNApplication::error("Access denied");			return;		}		$event = SQLQuery::create()					->bypass_security()					->select("CalendarEvent")					->where("id = '".$id."'")					->execute_single_row();		if(PNApplication::has_errors()){			echo "false";			return;		}		echo "new CalendarEvent{".json_encode($event["id"]);		echo ",".json_encode($event["calendar"]);		echo ",".json_encode($event["uid"]);		echo ",new Date(parseInt(".json_encode($event["start"]).")*1000)";		echo ",new Date(parseInt(".json_encode($event["end"]).")*1000)";		echo ",".json_encode($event["all_day"]);		echo ",".json_encode($event["last_modified"]);		echo ",".json_encode($event["title"]);		echo ",".json_encode($event["description"]);		echo ",".json_encode($event["location_freetext"]);		echo ",".json_encode($event["organizer"]);		echo ",".json_encode($event["participation"]);		echo ",".json_encode($event["role"]);		echo ")";	}}