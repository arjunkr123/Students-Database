<?php class service_get_event extends Service {		public function get_required_rights() {		return array();	}		public function documentation() {?>Return event data for the given event<?php 	}	public function input_documentation() { ?><ul><li><code>id</code>: the id of the event</li><li><code>calendar_id</code>: the id of the calendar</li></ul><?php 	}	public function output_documentation() {?>{id:,calendar:,uid:,start:,end:,all_day:,last_modified:,title:,description:,location_freetext:,organizer:,participation:,role:}<?php 		}			public function execute(&$component, $input) {		$calendar_id = $input["calendar_id"];		$id = $input["id"];		if (!$component->canReadCalendar($calendar_id)) {			PNApplication::error("Access denied");			return;		}		$event = $component->getEvent($id);		if(PNApplication::has_errors()){			echo "false";			return;		}		echo "{id:".json_encode($event["id"]);		echo ", calendar:".json_encode($event["calendar"]);		echo ", uid:".json_encode($event["uid"]);		echo ", start:".json_encode($event["start"]);		echo ", end:".json_encode($event["end"]);		echo ", all_day:".json_encode($event["all_day"]);		echo ", last_modified:".json_encode($event["last_modified"]);		echo ", title:".json_encode($event["title"]);		echo ", description:".json_encode($event["description"]);		echo ", location_freetext:".json_encode($event["location_freetext"]);		echo ", organizer:".json_encode($event["organizer"]);		echo ", participation:".json_encode($event["participation"]);		echo ", role:".json_encode($event["role"]);		echo "}";	}}