<?phpclass service_get_country_data extends Service{	public function get_required_rights(){return array();}	public function documentation(){?><?php		}	public function input_documentation(){}	public function output_documentation(){}	public function execute(&$component){				/*TODO: Doc*/							$q = SQLQuery::create()->select("Country")						->field("Country","id","country_id")						->field("Country","code","country_code")						->field("Country","name","country_name")						->field("Country_division","id","division_id")						->field("Country_division","parent","division_parent_id")						->field("Country_division","name","division_name")						->field("Geographic_area","id","area_id")						->field("Geographic_area","name","area_name")						->field("Geographic_area","parent","area_parent_id")						->join("Country","Country_division",array("id"=>"country"))						->join("Country_division","Geographic_area",array("id"=>"country_division"))						->where("Country.code='".$_POST['country_code']."'")						->order_by("division_id");		$country_data=$q->execute();		if(!isset($country_data[0]['division_id'])) echo "{}";		else{			$country_id = $country_data[0]["country_id"];			/*we sort by division*/			$sorted_divisions=$this->sort_division($country_data);						/*We get the areas by division*/			$areas_per_division=array();			foreach ($sorted_divisions as $sorted_division){				$result = $this->get_areas($sorted_division["division_id"]);				$i = 0;				foreach($result as $r){					$areas_per_division[$sorted_division["division_id"]][$i]=array(						"area_id" => $r["area_id"],						"area_name" => $r["area_name"],						"area_parent_id" => $r["area_parent_id"]						);					$i++;					// echo(count($area_per_division[$sorted_division["division_id"]]));				}			}			/*We now built the javascript object			*divisions = [{division_id, division_name, division_parent_id, areas:[{area_id, area_name, area_parent_id}]}...]			*/									$number_of_areas_per_division = $this->get_number_areas($country_id);						echo "[";			$first_division = true;				foreach($sorted_divisions as $sorted_division){					if(!$first_division) echo ", ";					echo "{division_id:".json_encode($sorted_division["division_id"]).", ";					echo "division_name:".json_encode($sorted_division["division_name"]).", ";					echo "areas:[";						$first_area = true;					$areas = $areas_per_division[$sorted_division["division_id"]];					foreach($areas as $area){						if($area["area_id"] === null){							break;						}						else{							if(!$first_area) echo ", ";							echo "{area_id:".json_encode($area["area_id"]).", ";							echo "area_name:".json_encode($area["area_name"]).", ";							echo "area_parent_id:".json_encode($area["area_parent_id"])."}";							$first_area = false;						}					}					echo "]}";					$first_division = false;									}			echo "]";		}	}	function get_number_areas($country_id){		$q = SQLQuery::create()->select("Country")						->field("Country","id","country_id")						->field("Country","code","country_code")						->field("Country","name","country_name")						->field("Country_division","id","division_id")						->field("Country_division","parent","division_parent_id")						->field("Country_division","name","division_name")						->field("Geographic_area","id","area_id")						->field("Geographic_area","name","area_name")						->field("Geographic_area","parent","area_parent_id")						->join("Country","Country_division",array("id"=>"country"))						->join("Country_division","Geographic_area",array("id"=>"country_division"))						->where("Country.id='".$country_id."'")						->count_one_field("Geographic_area","id","count_areas")						->group_by("Country_division","id");		$results = $q->execute();		$number_of_areas_per_division=array();		foreach($results as $r){			$number_of_areas_per_division[$r["division_id"]]=$r["count_areas"];		}		return $number_of_areas_per_division;	}				function sort_division($country_data){		$divisions=array();		$divisions_id_done=array();		foreach($country_data as $c){			if(!in_array($c["division_id"],$divisions_id_done)){				array_push($divisions,array("division_id"=>$c["division_id"], "division_name"=>$c["division_name"], "division_parent_id"=>$c["division_parent_id"]));				array_push($divisions_id_done, $c["division_id"]);				continue;			}			else continue;		}		$sorted_divisions=array();		/*We get the root*/		$root=array();		foreach($divisions as $division){			if($division["division_parent_id"]===null){				$root["division_id"]=$division["division_id"];				$root["division_name"]=$division["division_name"];				break;			}		}		array_push($sorted_divisions,array("division_id"=>$root["division_id"], "division_name"=>$root["division_name"], "division_parent_id"=>null));		$i=0;		while(count($sorted_divisions)!=count($divisions)){			foreach($divisions as $division){				if($sorted_divisions[$i]["division_id"]==$division["division_parent_id"]){					$sorted_divisions[$i+1]["division_id"]=$division["division_id"];					$sorted_divisions[$i+1]["division_name"]=$division["division_name"];					$sorted_divisions[$i+1]["division_parent_id"]=$division["division_parent_id"];					$i++;				}			}		}		return $sorted_divisions;	}		function get_areas($division_id){		$q=SQLQuery::create()->select("Country_division")						->field("Country_division","id","division_id")						->field("Geographic_area","id","area_id")						->field("Geographic_area","name","area_name")						->field("Geographic_area","parent","area_parent_id")						->join("Country_division","Geographic_area",array("id"=>"country_division"))						->where("Country_division.id='".$division_id."'")						->order_by("area_name");		$areas = $q->execute();		return $areas;	}}?>