/** Address field: if editable, it will be a text input with the edit_address screen, else only a simple text node * @constructor * @param config.lock the lock id given by editable_table */function field_address(data,editable,config){	if (data != null && data.length == 0) data = null;	typed_field.call(this, data, editable, config);}field_address.prototype = new typed_field();field_address.prototype.constructor = field_address;		field_address.prototype.structure = null;field_address.prototype.structureHasChanged = false;field_address.prototype._create = function(data) {	var t = this;	if(this.editable){		var f = function() { setTimeout(function() { t._datachanged(); }); };		this.createMenu = function(){			//stopEventPropagation(e);			require(["edit_address.js","context_menu.js"],function(){				service.json("contact","get_address",{address_id:data},function(res){					if(!res) return;					var menu = new context_menu();					var div = document.createElement('div');					t.address = new edit_address(div,res);					menu.addItem(div,true);					menu.removeOnClose = true;					menu.showBelowElement(t.element);					menu.onclose = function(){						/*Get the structure to save*/						var new_structure = t.address.getStructure();						if(new_structure != t.structure){							t.structure = new_structure;							t.structureHasChanged = true;							if(t.element.firstChild != null) t.element.removeChild(t.element.firstChild);							require("address_text.js",function(){								new address_text(t.structure, function(obj){									var div = document.createElement('div');									obj.getAddressText(div);									t.element.appendChild(div);								});							});						}					};				});			});		};				this.setData = function(data,first){			t.addressId = data;			if(data == null){				t.element.innerHTML = "No address";				t.element.style.fontStyle = "italic";			} else {				require("address_text.js",function(){					new address_text(data, function(obj){						var div = document.createElement('div');						obj.getAddressText(div);						t.element.appendChild(div);					});				});			}			t.createMenu();			f();		};		this.setData(data,true);				this.getCurrentData = function(){			if(t.element.innerHTML.length == 0) return null;			return t.addressId;		};		this.signal_error = function(error){			t.error = error;			t.element.style.border = error ? "1px solid red" : "";		};	} else {		this.setData = function(data, first){			this.addressId = data;			if(data == null){				t.element.innerHTML = "No address";				t.element.style.fontStyle = "italic";			} else {				require("address_text.js",function(){					var text = new address_text(data);					t.element.appendChild(text.element);				});			}			if (!first) this._datachanged();		};				this.setData(data,true);		this.getCurrentData = function(){			return t.addressId;		};	}};