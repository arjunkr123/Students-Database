/* All the main selection methods */		/**	 * Find th e index of a config attribute into the config array	 * @param {Array} config	 * @param {String} name the name of the config attribute seeked	 * @returns {Number} the index found	 */findIndexInConfig = function(config, name){	var index = null;	for(var i = 0; i < config.length; i++){		if(config[i].name == name){			index = i;			break;		}	}	return index;};/** * Get the array containing the categories and their respective indexes for the config attributes * @returns {Array} [{index:, name:},...] */getConfigCategoryIndexes = function(){	var categories = [];	categories[0] = {index:1,name:"Information Session"};	categories[1] = {index:2,name:"Exam Subject"};	categories[2] = {index:3,name:"Applicant"};	categories[3] = {index:4,name:"Entrance Examination"};	return categories;};/** * Retrieve from the steps JSON array the step value from its name * @param {Array} steps * @param {String} name the name of the seeked step */getStepValue = function(steps,name){	for(var i = 0; i < steps.length; i++){		if(steps[i].name == name)			return steps[i].value;	}};/** * Get an exam session name from its CalendarEvent object * @param {CalendarEvent} event * @returns {String} */getExamSessionNameFromEvent = function(event){	var name = "";	var start = new Date(event.start*1000);//Convert timestamp into ms	var end = new Date(event.end*1000);//Convert timestamp into ms	var date = dateToSQL(start);	var field_time_start = new field_time(start.getHours()+":"+start.getMinutes(),false);	var field_time_end = new field_time(end.getHours()+":"+end.getMinutes(),false);	var start_element = field_time_start.getHTMLElement();	start_element = start_element.firstChild.nodeValue;	var end_element = field_time_end.getHTMLElement();	end_element = end_element.firstChild.nodeValue;	name += date+" ("+start_element+" to "+end_element+")";	return name;};/** * Get the a string containing the main data for a given applicant (applicant_id, first / middle / last name, sex, date of birth) * @param {Applicant} * @returns {String} */getApplicantMainDataDisplay = function(applicant){	var text = "";	text += applicant.applicant_id+", "+applicant.last_name.uniformFirstLetterCapitalized();	if(typeof applicant.middle_name == "string" && applicant.middle_name.checkVisible())		text +=", "+applicant.middle_name.uniformFirstLetterCapitalized();	text += ", "+applicant.first_name.uniformFirstLetterCapitalized();	if(typeof applicant.sex == "string" && applicant.sex.checkVisible())		text += ", "+applicant.sex;	if(typeof applicant.birthdate == "string" && applicant.birthdate.checkVisible())		text +=", "+applicant.birthdate;	return text;};