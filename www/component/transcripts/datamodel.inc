<?php 
/* @var $model DataModel */
$model->addTable("CurriculumSubjectGrading")
	->addForeignKey("subject", "CurriculumSubject", true, false, false, false, true)
	->addDecimal("max_grade",3,2,0,100,false,false)
	->addDecimal("passing_grade",3,2,0,100,false,false)
	->addBoolean("only_final_grade", false)
	->setPrimary("subject")
	->addReadAccess("consult_students_grades", true)
	->addWriteAccess("edit_students_grades", true)
	->addInsertAccess("edit_students_grades", true)
	->addRemoveAccess("edit_students_grades", true)
	->addRemoveAccess("edit_curriculum", true)
	;

$model->addTable("CurriculumSubjectEvaluationType")
	->addPrimaryKey("id")
	->addForeignKey("subject", "CurriculumSubject", true, false, true, false, false)
	->addString("name", 100, 1, false, false)
	->addInteger("weight",8,0,200,false,false)
	->addReadAccess("consult_students_grades", true)
	->addWriteAccess("edit_students_grades", true)
	->addInsertAccess("edit_students_grades", true)
	->addRemoveAccess("edit_students_grades", true)
	->addRemoveAccess("edit_curriculum", true)
	;

$model->addTable("CurriculumSubjectEvaluation")
	->addPrimaryKey("id")
	->addForeignKey("type", "CurriculumSubjectEvaluationType", true, false, true, false, false)
	->addString("name", 100, 1, false, false)
	->addInteger("weight",8,0,200,false,false)
	->addDecimal("max_grade",5,2,0,null,false,false)
	->addReadAccess("consult_students_grades", true)
	->addReadAccessFromForeignTable("CurriculumSubjectEvaluationType")
	->addWriteAccess("edit_students_grades", true)
	->addInsertAccess("edit_students_grades", true)
	->addRemoveAccess("edit_students_grades", true)
	->addRemoveAccess("edit_curriculum", true)
	;

$model->addTable("StudentSubjectEvaluationTypeGrade")
	->addForeignKey("people", "People", true, false, true, false, false)
	->addForeignKey("type", "CurriculumSubjectEvaluationType", true, false, true, false, false)
	->addDecimal("grade",3,2,0,100,true,false)
	->setKey(array("people","type"))
	->addReadAccess("consult_students_grades", true)
	->addWriteAccess("edit_students_grades", true)
	->addInsertAccess("edit_students_grades", true)
	->addRemoveAccess("edit_students_grades", true)
	->addRemoveAccess("edit_curriculum", true)
	;

$model->addTable("StudentSubjectEvaluationGrade")
	->addForeignKey("people", "People", true, false, true, false, false)
	->addForeignKey("evaluation", "CurriculumSubjectEvaluation", true, false, true, false, false)
	->addDecimal("grade",3,2,0,100,true,false)
	->setKey(array("people","evaluation"))
	->addReadAccess("consult_students_grades", true)
	->addWriteAccess("edit_students_grades", true)
	->addInsertAccess("edit_students_grades", true)
	->addRemoveAccess("edit_students_grades", true)
	->addRemoveAccess("edit_curriculum", true)
	;

$model->addTable("StudentSubjectGrade")
	->addForeignKey("people", "People", true, false, true, false, false)
	->addForeignKey("subject", "CurriculumSubject", true, false, true, false, false)
	->addDecimal("grade",3,2,0,100,true,false)
	->addString("comment", 4000, 0, true, false)
	->setKey(array("people","subject"))
	->addReadAccess("consult_students_grades", true)
	->addWriteAccess("edit_students_grades", true)
	->addInsertAccess("edit_students_grades", true)
	->addRemoveAccess("edit_students_grades", true)
	->addRemoveAccess("edit_curriculum", true)
	;

$model->addTable("StudentTranscriptGeneralComment")
	->addForeignKey("people", "People", true, false, true, false, false)
	->addForeignKey("period", "BatchPeriod", true, false, true, false, false)
	->addString("comment", 4000, 0, false, false)
	->setKey(array("people","period"))
	->addReadAccess("consult_students_grades", true)
	->addWriteAccess("edit_students_grades", true)
	->addInsertAccess("edit_students_grades", true)
	->addRemoveAccess("edit_students_grades", true)
	->addRemoveAccess("edit_curriculum", true)
	;

$model->addTable("TranscriptConfig")
	->addForeignKey("period", "BatchPeriod", true, false, true, false, false)
	->addForeignKey("specialization", "Specialization", true, false, true, true, false)
	->setKey(array("period","specialization"))
	->addString("grading_system",50,1,true,false)
	->addBoolean("nb_hours", true)
	->addEnum("hours_type", array("Per week","Per period"), true, false)
	->addBoolean("coefficient", true)
	->addBoolean("batch_average", true)
	->addBoolean("batch_lowest", true)
	->addBoolean("batch_highest", true)
	->addBoolean("class_average", true)
	->addBoolean("class_lowest", true)
	->addBoolean("class_highest", true)
	->addBoolean("comment", true)
	->addBoolean("general_appreciation", true)
	->addBoolean("subject_code", true)
	->addString("subject_category_background", 7,7, true, false)
	->addString("subject_category_color", 7,7, true, false)
	->addEnum("subject_category_weight", array("normal","bold"), true, false)
	->addInteger("subject_category_size", 8, 8,36, true, false)
	->addString("columns_titles_background", 7,7, true, false)
	->addString("columns_titles_color", 7,7, true, false)
	->addEnum("columns_titles_weight", array("normal","bold"), true, false)
	->addInteger("columns_titles_size", 8, 8,36, true, false)
	->addString("general_comment_title_background", 7,7, true, false)
	->addString("general_comment_title_color", 7,7, true, false)
	->addEnum("general_comment_title_weight", array("normal","bold"), true, false)
	->addInteger("general_comment_title_size", 8, 8,36, true, false)
	->addInteger("general_comment_size", 8, 8,36, true, false)
	->addString("total_background", 7,7, true, false)
	->addString("total_color", 7,7, true, false)
	->addInteger("total_size", 8, 8,36, true, false)
	->addString("location",100,1,true,false)
	->addString("signatory_name",100,1,true,false)
	->addString("signatory_title",100,1,true,false)
	->addReadAccess("consult_students_grades", true)
	->addWriteAccess("edit_transcripts_design", true)
	->addInsertAccess("edit_transcripts_design", true)
	->addRemoveAccess("edit_transcripts_design", true)
	;

$model->addTable("TranscriptSubjects")
	->addForeignKey("period", "BatchPeriod", true, false, true, false, false)
	->addForeignKey("specialization", "Specialization", true, false, true, true, false)
	->addForeignKey("subject","CurriculumSubject", true, false, false, false)
	->setKey(array("period","specialization","subject"))
	->addReadAccess("consult_students_grades", true)
	->addWriteAccess("edit_transcripts_design", true)
	->addInsertAccess("edit_transcripts_design", true)
	->addRemoveAccess("edit_transcripts_design", true)
	;

$model->addTable("PublishedTranscript")
	->addPrimaryKey("id")
	->addForeignKey("period", "BatchPeriod", true, false, true, false, false)
	->addForeignKey("specialization", "Specialization", true, false, true, true, false)
	->addString("name", 100, 1, false, false)
	->addString("grading_system",50,1,true,false)
	->addBoolean("nb_hours", true)
	->addEnum("hours_type", array("Per week","Per period"), true, false)
	->addBoolean("coefficient", true)
	->addBoolean("batch_average", true)
	->addBoolean("batch_lowest", true)
	->addBoolean("batch_highest", true)
	->addBoolean("class_average", true)
	->addBoolean("class_lowest", true)
	->addBoolean("class_highest", true)
	->addBoolean("comment", true)
	->addBoolean("general_appreciation", true)
	->addBoolean("subject_code", true)
	->addString("subject_category_background", 7,7, true, false)
	->addString("subject_category_color", 7,7, true, false)
	->addEnum("subject_category_weight", array("normal","bold"), true, false)
	->addInteger("subject_category_size", 8, 8,36, true, false)
	->addString("columns_titles_background", 7,7, true, false)
	->addString("columns_titles_color", 7,7, true, false)
	->addEnum("columns_titles_weight", array("normal","bold"), true, false)
	->addInteger("columns_titles_size", 8, 8,36, true, false)
	->addString("general_comment_title_background", 7,7, true, false)
	->addString("general_comment_title_color", 7,7, true, false)
	->addEnum("general_comment_title_weight", array("normal","bold"), true, false)
	->addInteger("general_comment_title_size", 8, 8,36, true, false)
	->addInteger("general_comment_size", 8, 8,36, true, false)
	->addString("total_background", 7,7, true, false)
	->addString("total_color", 7,7, true, false)
	->addInteger("total_size", 8, 8,36, true, false)
	->addString("location",100,1,true,false)
	->addString("signatory_name",100,1,true,false)
	->addString("signatory_title",100,1,true,false)
	->allowReadAccess()
	->addWriteAccess("edit_transcripts_design", true)
	->addInsertAccess("edit_transcripts_design", true)
	->addRemoveAccess("edit_transcripts_design", true)
	->onInsert(function($fields,$id,$sub_model_instance) {
		try {
			$period = PNApplication::$instance->curriculum->getBatchPeriod($fields["period"]);
			$batch = PNApplication::$instance->curriculum->getBatch($period["batch"]);
			PNApplication::$instance->news->post("students", "transcripts", array("batch".$batch["id"],"period".$period["id"]), "activity", "Transcript published for Batch ".toHTML($batch["name"]).", period ".toHTML($period["name"]));
		} catch (Exception $e) { PNApplication::error($e); }
	})
	;

$model->addTable("PublishedTranscriptStudentSubjectGrade")
	->addForeignKey("id", "PublishedTranscript", true, false, true, false, false)
	->addForeignKey("subject", "CurriculumSubject", true, false, true, false, false)
	->addForeignKey("people", "People", true, false, true, false, false)
	->addDecimal("grade",3,2,0,100,true,false)
	->addString("comment", 4000, 0, true, false)
	->setKey(array("id","subject","people"))
	->addReadAccess("consult_students_grades", true)
	->addReadFilter(function(&$q,$table_alias) {
		$q->whereValue($table_alias,"people",PNApplication::$instance->user_management->people_id);
	})
	->addWriteAccess("edit_transcripts_design", true)
	->addInsertAccess("edit_transcripts_design", true)
	->addRemoveAccess("edit_transcripts_design", true)
	->addRemoveAccess("edit_curriculum", true)
	;

$model->addTable("PublishedTranscriptStudentGeneralComment")
	->addForeignKey("id", "PublishedTranscript", true, false, true, false, false)
	->addForeignKey("people", "People", true, false, true, false, false)
	->addString("comment", 4000, 0, false, false)
	->setKey(array("id","people"))
	->addReadAccess("consult_students_grades", true)
	->addReadFilter(function(&$q,$table_alias) {
		$q->whereValue($table_alias,"people",PNApplication::$instance->user_management->people_id);
	})
	->addWriteAccess("edit_transcripts_design", true)
	->addInsertAccess("edit_transcripts_design", true)
	->addRemoveAccess("edit_transcripts_design", true)
	->addRemoveAccess("edit_transcripts_design", true)
	;

?>